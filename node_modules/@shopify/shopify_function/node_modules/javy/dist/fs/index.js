var o = /* @__PURE__ */ ((r) => (r[r.Stdin = 0] = "Stdin", r[r.Stdout = 1] = "Stdout", r[r.Stderr = 2] = "Stderr", r))(o || {});
function a(r) {
  let e = new Uint8Array(1024), t = 0;
  for (; ; ) {
    const i = Javy.IO.readSync(r, e.subarray(t));
    if (i < 0)
      throw Error("Error while reading from file descriptor");
    if (i === 0)
      return e.subarray(0, t + i);
    if (t += i, t === e.length) {
      const n = new Uint8Array(e.length * 2);
      n.set(e), e = n;
    }
  }
}
function s(r, e) {
  for (; e.length > 0; ) {
    const t = Javy.IO.writeSync(r, e);
    if (t < 0)
      throw Error("Error while writing to file descriptor");
    e = e.subarray(t);
  }
}
export {
  o as STDIO,
  a as readFileSync,
  s as writeFileSync
};
